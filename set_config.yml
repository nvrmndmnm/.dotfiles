---
- name: setup paths
  set_fact:
    ansible_files_path: "{{ role_path | replace(control_home_path, managed_home_path) }}/files"

- name: list config files
  find:
    path: "{{ ansible_files_path }}"
    recurse: true
    hidden: true
  register: config_list

- name: filter host-specific config files
  set_fact:
    filtered_config_files: >-
      {{
        config_list.files | selectattr('path', 'search', '/common/')
        + config_list.files | selectattr('path', 'search', '/' + inventory_hostname + '/')
      }}

- name: backup config files
  block:
  - name: check existing files
    stat:
      path: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) }}"
    loop: "{{ filtered_config_files }}"
    loop_control:
      label: "{{ item.path }}"
    register: old_config

  - name: move old files
    command: mv {{ item.stat.path }} {{ item.stat.path }}.old
    loop: "{{ old_config.results }}"
    loop_control:
      label: "{{ item.invocation.module_args.path }}"
    when: item.stat.isreg | default(false)
  when: filtered_config_files | length > 0

- name: create directory structure
  file:
    path: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) | dirname }}" 
    state: directory
    mode: "{{ dir_mode | default('0755')}}"
  loop: "{{ filtered_config_files }}"
  loop_control:
    label: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) | dirname }}" 

- name: create config symlinks
  file:
    src: "{{ item.path }}"
    dest: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) }}"
    state: link
  loop: "{{ filtered_config_files }}"
  loop_control:
    label: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) }}" 
  when: config_path is search(ansible_facts['user_dir'])

- name: copy config files
  copy:
    src: "{{ item.path | replace(managed_home_path, control_home_path) }}"
    dest: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) }}"
    mode: "{{ files_mode | default('0644') }}"
  loop: "{{ filtered_config_files }}"
  loop_control:
    label: "{{ item.path | regex_replace('^' + ansible_files_path + '/(common|' + inventory_hostname + ')', config_path) }}" 
  when: config_path is not search(ansible_facts['user_dir'])
